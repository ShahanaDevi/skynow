


# ? Email Configuration

spring.thymeleaf.cache=false
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=kalainewyeardon@gmail.com
spring.mail.password=hdkw acza gccl bdyp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


# MySQL Database (Docker / Host)
# Use Docker Compose service hostname and allow environment overrides when running in Compose or on host.
# Default URL points to the 'mysql' service on the compose network (container-to-container).
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://mysql:3306/login_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:root}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:Sure@123}
# When running locally (not in Compose) you can set SPRING_DATASOURCE_URL to jdbc:mysql://localhost:3307/login_db

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect


# OpenWeather API Key
openweather.api.key=${OPENWEATHER_API_KEY:bb04e05ef105edd7c4e220dab5ffe460}

# OpenAI API Key and Configuration (use environment variable or application.yml)
openai.api.key=${OPENAI_API_KEY:}
openai.model=gpt-3.5-turbo
openai.temperature=0.7
openai.max-tokens=500
# Server Configuration
server.port=8080
spring.application.name=SkyNow-Backend

# Actuator Configuration
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always


#Logging / Audit (Optional)

# Format timestamps in logs
logging.pattern.dateformat=yyyy-MM-dd HH:mm:ss
logging.file.name=logs/skynow.log
logging.level.org.springframework=DEBUG
logging.level.com.example.skynow=DEBUG
logging.level.org.springframework.web.socket=TRACE
logging.level.org.springframework.messaging=TRACE
